trigger:
  - master
  - develop
  - release/*
  - hotfix/*
  - feature/*

jobs:
  - job: setupenv
    steps:
      # set channel
      - bash: |
          echo "##vso[task.setvariable variable=channel;isOutput=truecanary"
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/develop')
      - bash: |
          echo "##vso[task.setvariable variable=channel;isOutput=true]stable"
        condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix/'))
      - bash: |
          echo "##vso[task.setvariable variable=channel;isOutput=true]next"
        condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/release/')
      # set branchtype
      - bash: |
          echo "##vso[task.setvariable variable=branchtype;isOutput=true]indev"
        condition: or(startsWith(variables['Build.SourceBranch'], 'refs/heads/feature/'), startsWith(variables['Build.SourceBranch'], 'refs/heads/hotfix/'))
      - bash: |
          echo "##vso[task.setvariable variable=branchtype;isOutput=true]rel"
        condition: or(eq(variables['Build.SourceBranch'], 'refs/heads/master'), eq(variables['Build.SourceBranch'], 'refs/heads/develop'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
      # - bash: |
      #     echo "##vso[task.setvariable variable=branchtype;isOutput=true]"$(branchtype)
      # - bash: |
      #     echo "##vso[task.setvariable variable=channel;isOutput=true]"$(channel)

  - template: scripts/build.yml
    parameters:
      os: "win"
      vmImage: "vs2017-win2016"
      channel: $[dependencies.setupenv.outputs['channel']]

  - template: scripts/build.yml
    parameters:
      os: "lin"
      vmImage: "Ubuntu 16.04"
      channel: $[dependencies.setupenv.outputs['channel']]

  - template: scripts/build.yml
    parameters:
      os: "mac"
      vmImage: "macOS-10.13"
      channel: $[dependencies.setupenv.outputs['channel']]
# if branch release/*, merge changes into develop (or create pr if possible)
